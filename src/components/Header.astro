---
import { siteConfig } from "../config";
import { translations } from "../i18n/translations";
import { languageStore } from "../store/theme";
import ThemeSwitch from "./ThemeSwitch.astro";

const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;
const hasExperience = siteConfig.experience && siteConfig.experience.length > 0;
const hasEducation = siteConfig.education && siteConfig.education.length > 0;

const t = translations[languageStore.get()];
---

<header
  id="header"
  class="fixed top-0 left-0 right-0 z-40 transition-all duration-300"
>
  <div class="absolute inset-0 bg-background/80 backdrop-blur-sm"></div>
  
  <nav class="relative max-w-7xl mx-auto px-6 py-4">
    <div class="flex items-center justify-between">
      <!-- Logo/Name -->
      <a 
        href="#" 
        class="text-xl font-bold tracking-tight hover:text-primary transition-colors"
      >
        {siteConfig.name}
      </a>

      <!-- Desktop Navigation -->
      <ul class="hidden md:flex items-center gap-6">
        <li>
          <a
            href="#about"
            class="nav-link"
          >
            {t.nav.about}
          </a>
        </li>
        {
          hasProjects && (
            <li>
              <a
                href="#projects"
                class="nav-link"
              >
                {t.nav.projects}
              </a>
            </li>
          )
        }
        {
          hasExperience && (
            <li>
              <a
                href="#experience"
                class="nav-link"
              >
                {t.nav.experience}
              </a>
            </li>
          )
        }
        {
          hasEducation && (
            <li>
              <a
                href="#education"
                class="nav-link"
              >
                {t.nav.education}
              </a>
            </li>
          )
        }
      </ul>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        class="md:hidden p-2 hover:bg-secondary rounded-md transition-colors"
        aria-label="Toggle menu"
      >
        <svg 
          xmlns="http://www.w3.org/2000/svg" 
          width="24" 
          height="24" 
          viewBox="0 0 24 24" 
          fill="none" 
          stroke="currentColor" 
          stroke-width="2" 
          stroke-linecap="round" 
          stroke-linejoin="round"
        >
          <line x1="4" x2="20" y1="12" y2="12"/>
          <line x1="4" x2="20" y1="6" y2="6"/>
          <line x1="4" x2="20" y1="18" y2="18"/>
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div
      id="mobile-menu"
      class="md:hidden fixed inset-x-0 top-[65px] p-4 bg-background/80 backdrop-blur-sm border-t border-border transform -translate-y-full transition-transform duration-300"
    >
      <ul class="flex flex-col gap-2">
        <li>
          <a
            href="#about"
            class="mobile-nav-link"
          >
            {t.nav.about}
          </a>
        </li>
        {
          hasProjects && (
            <li>
              <a
                href="#projects"
                class="mobile-nav-link"
              >
                {t.nav.projects}
              </a>
            </li>
          )
        }
        {
          hasExperience && (
            <li>
              <a
                href="#experience"
                class="mobile-nav-link"
              >
                {t.nav.experience}
              </a>
            </li>
          )
        }
        {
          hasEducation && (
            <li>
              <a
                href="#education"
                class="mobile-nav-link"
              >
                {t.nav.education}
              </a>
            </li>
          )
        }
      </ul>
    </div>
  </nav>
</header>

<ThemeSwitch />

<style>
  .nav-link {
    @apply relative py-1 text-muted-foreground hover:text-foreground transition-colors;
  }

  .nav-link::after {
    content: '';
    @apply absolute left-0 right-0 bottom-0 h-0.5 bg-primary scale-x-0 transition-transform duration-300;
  }

  .nav-link:hover::after {
    @apply scale-x-100;
  }

  .mobile-nav-link {
    @apply block w-full px-4 py-2 text-muted-foreground hover:text-foreground hover:bg-secondary rounded-md transition-colors;
  }
</style>

<script>
  const header = document.getElementById('header');
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  let isMenuOpen = false;

  // Handle scroll
  window.addEventListener('scroll', () => {
    if (window.scrollY > 0) {
      header?.classList.add('shadow-sm');
    } else {
      header?.classList.remove('shadow-sm');
    }
  });

  // Handle mobile menu
  mobileMenuButton?.addEventListener('click', () => {
    isMenuOpen = !isMenuOpen;
    if (isMenuOpen) {
      mobileMenu?.classList.remove('-translate-y-full');
    } else {
      mobileMenu?.classList.add('-translate-y-full');
    }
  });

  // Close mobile menu when clicking a link
  const mobileLinks = document.querySelectorAll('.mobile-nav-link');
  mobileLinks.forEach(link => {
    link.addEventListener('click', () => {
      isMenuOpen = false;
      mobileMenu?.classList.add('-translate-y-full');
    });
  });
</script>

<script>
  window.addEventListener("scroll", () => {
    const header = document.getElementById("header");
    if (window.scrollY > 100) {
      header?.classList.add("bg-white/80", "backdrop-blur-sm");
    } else {
      header?.classList.remove("bg-white/80", "backdrop-blur-sm");
    }
  });
</script>

<style>
  html {
    scroll-behavior: smooth;
  }
</style>
