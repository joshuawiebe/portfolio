---
---

<div class="space-y-4">
  <div class="flex justify-between items-center">
    <div class="flex items-center gap-2">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-foreground" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" />
      </svg>
      <span class="text-foreground font-medium">Theme</span>
    </div>
  </div>
  
  <div class="grid grid-cols-3 gap-2">
    <button
      class="theme-button"
      data-theme-value="light"
      aria-label="Light theme"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <circle cx="12" cy="12" r="5" />
        <line x1="12" y1="1" x2="12" y2="3" />
        <line x1="12" y1="21" x2="12" y2="23" />
        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64" />
        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78" />
        <line x1="1" y1="12" x2="3" y2="12" />
        <line x1="21" y1="12" x2="23" y2="12" />
        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36" />
        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22" />
      </svg>
      <span>Light</span>
    </button>
    <button
      class="theme-button"
      data-theme-value="dark"
      aria-label="Dark theme"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" />
      </svg>
      <span>Dark</span>
    </button>
    <button
      class="theme-button"
      data-theme-value="system"
      aria-label="System theme"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <rect x="2" y="3" width="20" height="14" rx="2" ry="2" />
        <line x1="8" y1="21" x2="16" y2="21" />
        <line x1="12" y1="17" x2="12" y2="21" />
      </svg>
      <span>System</span>
    </button>
  </div>
</div>

<style>
  .theme-button {
    @apply flex items-center justify-center gap-2 p-2 rounded-lg text-sm font-medium text-muted-foreground
           hover:text-foreground hover:bg-secondary/80 transition-all;
  }

  .theme-button[data-theme-selected="true"] {
    @apply bg-secondary text-foreground;
  }
</style>

<script>
  const updateThemeButtons = () => {
    const currentTheme = localStorage.getItem('theme') || 'system';
    document.querySelectorAll('.theme-button').forEach(button => {
      const buttonTheme = (button as HTMLElement).dataset.themeValue;
      button.setAttribute('data-theme-selected', (buttonTheme === currentTheme).toString());
    });
  };

  document.querySelectorAll('.theme-button').forEach(button => {
    button.addEventListener('click', () => {
      const theme = (button as HTMLElement).dataset.themeValue;
      if (theme === 'system') {
        localStorage.removeItem('theme');
        const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        document.documentElement.setAttribute('data-theme', systemTheme);
      } else if (theme) {
        localStorage.setItem('theme', theme);
        document.documentElement.setAttribute('data-theme', theme);
      }
      updateThemeButtons();
    });
  });

  // Initialize on page load
  document.addEventListener('astro:page-load', updateThemeButtons);
  // Also initialize immediately in case we're not using view transitions
  updateThemeButtons();

  // Watch for system theme changes
  if (typeof window !== 'undefined') {
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {
        document.documentElement.setAttribute('data-theme', e.matches ? 'dark' : 'light');
        updateThemeButtons();
      }
    });
  }
</script>